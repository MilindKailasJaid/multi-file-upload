buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
    }
}


plugins {
    id("maven-publish")
}

version "0.1.8"
group "com.wizpanda.plugins"

publishing {
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/wizpanda/multi-file-upload")
            credentials {
                username = System.getenv("githubUser")
                password = System.getenv("githubPassword")
            }
        }
    }
}

apply plugin: "eclipse"
apply plugin: "idea"
apply plugin: "org.grails.grails-plugin"

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile group: "org.apache.jclouds", name: "jclouds-core", version: "2.2.0"
    compile group: "org.apache.jclouds", name: "jclouds-allblobstore", version: "2.2.0"
    compile 'org.grails.plugins:quartz:2.0.13'
    console "org.grails:grails-console"
    profile "org.grails.profiles:plugin"
    provided "org.grails:grails-plugin-services"
    provided "org.grails:grails-plugin-domain-class"
    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.grails:grails-plugin-testing"
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
}

// enable if you wish to package this plugin as a standalone application
bootRepackage.enabled = false
